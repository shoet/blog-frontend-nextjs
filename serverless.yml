service: blog-frontend-nextjs
frameworkVersion: "3"

provider:
  name: aws
  region: ap-northeast-1
  custom:
    defaultStage: dev

    dev:
      environmentStage: dev

    prod:
      environmentStage: prod

  stage: ${opt:stage, self:custom.defaultStage}

  environment:
    STAGE: ${self:provider.stage}

  ecr:
    images:
      NextJSContainerImage:
        path: ./
        file: Dockerfile
        platform: linux/amd64
        buildArgs:
          PORT: 3000
          API_HOST: ${ssm:/blog-frontend-nextjs-${self:provider.stage}/API_HOST}

package:
  patterns:
    - "!./**"

functions:
  NextJSBlogApp:
    role: LambdaRole
    image:
      name: NextJSContainerImage
    description: Next.js on Lambda
    events:
      - httpApi:
          path: /{proxy+}
          method: any
    timeout: 30

resources:
  Resources:
    LambdaRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: nextjs-on-lambda-role-${self:provider.stage}
        AssumeRolePolicyDocument:
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: nextjs-on-lambda-policy-${self:provider.stage}
            PolicyDocument:
              Statement:
                - Effect: "Allow"
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource: "arn:aws:logs:*:*:*"

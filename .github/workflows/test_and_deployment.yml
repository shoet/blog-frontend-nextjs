name: Test and deployment

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "TODO"

  deploy-development:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    timeout-minutes: 30
    environment:
      name: development
    permissions:
      id-token: write
    env:
      BRANCH: ${{ github.ref }}
      OIDC_ROLE_ARN: ${{ secrets.AWS_OIDC_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: checkou
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: setup node_modules
        working-directory: cdk
        run: npm ci

      - name: setup Next.js .env
        run: bash fetch_next_env.sh dev

      - name: deploy
        working-directory: cdk
        run: npm run deploy

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ github.ref == 'refs/heads/main' }}
    timeout-minutes: 30
    environment:
      name: production
    permissions:
      id-token: write
    env:
      BRANCH: ${{ github.ref }}
      OIDC_ROLE_ARN: ${{ secrets.AWS_OIDC_ROLE_ARN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - name: checkou
        uses: actions/checkout@v4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true

      - name: deploy
        run: |
          bash fetch_next_env.sh prod # .envの配置
          cd cdk && npm ci && npm run deploy:prod
